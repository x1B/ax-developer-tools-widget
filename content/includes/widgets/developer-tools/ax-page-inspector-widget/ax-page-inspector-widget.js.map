{"version":3,"sources":["ax-page-inspector-widget.jsx"],"names":[],"mappings":"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","file":"ax-page-inspector-widget.js","sourcesContent":["import React from 'react';\nimport patterns from 'laxar-patterns';\n\nimport wireflow from 'wireflow';\n\nconst {\n  selection: {\n    SelectionStore\n  },\n  history: {\n    actions: { CreateCheckpoint },\n    HistoryStore\n  },\n  layout: {\n     model: layoutModel,\n     actions: { AutoLayout },\n     LayoutStore\n  },\n  graph: {\n    model: graphModel,\n    GraphStore\n  },\n  settings: {\n    actions: { ChangeMode },\n    model: { Settings, READ_ONLY, READ_WRITE },\n    SettingsStore\n  },\n  Dispatcher,\n  components: { Graph }\n} = wireflow;\n\nfunction graph( pageInfo ) {\n\n   const vertices = {};\n   const edges = {};\n\n   const { pageRef, pageDefinitions, widgetDescriptors } = pageInfo;\n   const page = pageDefinitions[ pageRef ];\n\n   Object.keys( page.areas ).forEach( areaName => {\n      page.areas[ areaName ].forEach( component => {\n         if( component.widget ) {\n            addWidgetInstance( component );\n         }\n      } );\n   } );\n\n   console.log( \"GRAPH: \", {\n      vertices,\n      edges\n   } );\n   return graphModel.convert.graph( {\n      vertices,\n      edges\n   } );\n\n   function addWidgetInstance( widget ) {\n      // console.log( \"ADD WIDGET: \", widget );\n      const descriptor = widgetDescriptors[ widget.widget ];\n      const ports = { inbound: [], outbound: [] };\n      identifyPorts( widget.features, descriptor.features, [] );\n      vertices[ widget.id ] = {\n         id: widget.id,\n         label: widget.widget,\n         ports: ports\n      };\n\n      function identifyPorts( value, schema, path ) {\n         if( !value || !schema ) {\n            return;\n         }\n\n         if( schema.type === 'string' &&\n             schema.format === 'topic' &&\n             schema.axRole ) {\n            const type = schema.axPattern ? schema.axPattern.toUpperCase() : inferEdgeType( path );\n            if( !type ) {\n               return;\n            }\n            const edgeId = value;\n            ports[ schema.axRole === 'master' ? 'outbound' : 'inbound' ].push( {\n               label: path.join( '.' ),\n               id: path.join( ':' ),\n               type,\n               edgeId\n            } );\n            if( edgeId && !edges[ edgeId ] ) {\n               edges[ edgeId ] = { type, id: edgeId };\n            }\n         }\n\n         if( schema.type === 'object' && schema.properties ) {\n            Object.keys( schema.properties ).forEach( key => {\n               identifyPorts(\n                  value[ key ],\n                  schema.properties[ key ] || schema.additionalProperties,\n                  path.concat( [ key ] )\n               );\n            } );\n         }\n\n         if( schema.type === 'array' ) {\n            value.forEach( (item,i) => {\n               identifyPorts(\n                  item,\n                  schema.items,\n                  path.concat( [ i ] )\n               );\n            } );\n         }\n\n      }\n\n      function inferEdgeType( path ) {\n         if( !path.length ) {\n            return null;\n         }\n         const lastSegment = path[ path.length - 1 ];\n         if( [ 'action', 'flag', 'resource' ].indexOf( lastSegment ) !== -1 ) {\n            return lastSegment.toUpperCase();\n         }\n         if( lastSegment === 'onActions' ) {\n            return 'ACTION';\n         }\n         return inferEdgeType( path.slice( 0, path.length - 1 ) );\n      }\n   }\n}\n\nfunction layout( graph ) {\n   const vertices = {};\n   let i = 0;\n   graph.vertices.forEach( (_, key) => {\n      vertices[ key ] = { left: 50, top: 50 + 50 * i };\n      ++i;\n   } );\n\n   let j = 0;\n   const edges = {};\n   graph.edges.forEach( (_, key) => {\n      edges[ key ] = { left: 450, top: 150 + 50 * j };\n      ++j;\n   } );\n\n   console.log( \"LAYOUT: \", {\n      vertices,\n      edges\n   } );\n   return layoutModel.convert.layout( {\n      vertices,\n      edges\n   } );\n}\n\nfunction types() {\n   return graphModel.convert.types( {\n      RESOURCE: {\n        hidden: false,\n        label: 'Resources'\n      },\n      FLAG: {\n        label: 'Flags',\n        hidden: false\n      },\n      ACTION: {\n        // owningPort: 'inbound',\n        label: 'Actions',\n        hidden: false\n      }\n   } );\n}\n\n\nfunction create( context, eventBus, reactRender ) {\n\n   patterns.resources.handlerFor( context )\n      .registerResourceFromFeature( 'pageInfo', {\n         onUpdateReplace: update\n      } );\n\n   function renderEmpty() {\n      reactRender( <h3>Waiting for data</h3> );\n   }\n\n   let dispatcher;\n   function update() {\n      const pageInfo = context.resources.pageInfo;\n      if( !pageInfo || !pageInfo.pageRef ) {\n         dispatcher = null;\n         renderEmpty();\n         return;\n      }\n      if( dispatcher ) {\n         // TODO: tear down old dispatcher and stores, then rebuild\n         return;\n      }\n\n      const pageGraph = graph( pageInfo );\n      const pageTyeps = types();\n      const pageLayout = layout( pageGraph );\n      dispatcher = new Dispatcher( render );\n      new HistoryStore( dispatcher );\n      const graphStore = new GraphStore( dispatcher, pageGraph, pageTyeps );\n      const layoutStore = new LayoutStore( dispatcher, pageLayout, graphStore );\n      const settingsStore = new SettingsStore( dispatcher, Settings({ mode: READ_ONLY }) );\n      const selectionStore = new SelectionStore( dispatcher, layoutStore, graphStore );\n      render();\n      window.setTimeout( () => dispatcher.dispatch( AutoLayout() ), 500 );\n\n      function render() {\n         reactRender(\n            <div className='page-inspector-row'>\n               <h2><i className='fa fa-newspaper-o'></i>  { name }</h2>\n               <div className='demo-wrapper'>\n                 <div className='demo-editor'>\n                   <Graph className={'nbe-theme-fusebox-app'}\n                          types={graphStore.types}\n                          model={graphStore.graph}\n                          layout={layoutStore.layout}\n                          measurements={layoutStore.measurements}\n                          settings={settingsStore.settings}\n                          selection={selectionStore.selection}\n                          eventHandler={dispatcher.dispatch} />\n                 </div>\n               </div>\n            </div>\n         );\n      }\n   }\n\n   return { onDomAvailable: update };\n}\n\nexport default {\n   name: 'ax-page-inspector-widget',\n   injections: [ 'axContext', 'axEventBus', 'axReactRender' ],\n   create\n};\n"]}